---
kind: pipeline
type: kubernetes
name: default

steps:
- name: build & test (without LLM integraion)
  image: mcr.microsoft.com/dotnet/sdk:8.0
  when:
    event: [pull_request]
  commands:
  - dotnet build
  - dotnet test --logger "console;verbosity=detailed" --filter RequiresApiKeys!=true
- name: build & test (with LLM integraion)
  image: mcr.microsoft.com/dotnet/sdk:8.0
  when:
    branch: [main]
    event: [push, tag]
  environment:
    HUGGING_FACE_TOKEN:
      from_secret: hugging_face_token
    DEEPINFRA_APIKEY:
      from_secret: deepinfra_apikey
  commands:
  - dotnet build
  - dotnet test --logger "console;verbosity=detailed"
- name: build docker image (PRs + branches)
  image: plugins/docker
  when:
    event:
    - pull_request
  settings:
    repo: ghcr.io/dgrechka/chatbot
    registry: ghcr.io
    dry_run: true
    context: ChatBot
    dockerfile: ChatBot/Dockerfile
- name: build & push docker image (main)
  image: plugins/docker
  when:
    branch:
    - main
    event:
      exclude:
        - tag
  settings:
    username: dgrechka
    password:
      from_secret: dgrechka_ghcr_pat
    repo: ghcr.io/dgrechka/chatbot
    registry: ghcr.io
    context: ChatBot
    dockerfile: ChatBot/Dockerfile
    auto_tag: true
    force_tag: true
    build_args:
    - VERSION=0.0.0.${DRONE_BUILD_NUMBER}
- name: build & push docker image (tag)
  image: plugins/docker
  when:
    event:
    - tag
  settings:
    username: dgrechka
    password:
      from_secret: dgrechka_ghcr_pat
    repo: ghcr.io/dgrechka/chatbot
    registry: ghcr.io
    context: ChatBot
    dockerfile: ChatBot/Dockerfile
    auto_tag: true
    force_tag: true
    build_args:
    - VERSION=${DRONE_TAG}.${DRONE_BUILD_NUMBER}
---
kind: signature
hmac: da63e580f38caa7a7b04a142522748866d7f08d780c065b625e41447debc15a4

...